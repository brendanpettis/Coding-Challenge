.is-active {
    font-weight: bold;
}


/* 


  <Modal show={this.state.showAdd} onHide={this.close}>
                <Modal.Header closeButton>
                <Modal.Title>Add Recipe</Modal.Title>
                </Modal.Header>
                <Modal.Body>
                    <FormGroup controlId='formBasicText'
                    validationState={getValidationState(props)}
                    >
                    <ControlLabel>Recipe Title</ControlLabel>
                    <FormControl 
                        type='text'
                        value={props.state.latestRecipe.title}
                        placeholder='Enter Recipe Name'
                        onChange = {(event) => props.updateLatestRecipe(event.target.value, props.state.latestRecipe.ingredients)}
                    >
                    </FormControl>
                    <FormGroup controlId='formControlsTextarea'>
                    <ControlLabel>Recipe Ingredients</ControlLabel>
                    
                    <FormControl 
                        type='textarea'
                        placeholder='Enter Recipe Ingredients (Separate with Commas)'
                        onChange = {(event) => props.updateLatestRecipe(props.state.latestRecipe.title, event.target.value.split(','))}
                        value={props.state.latestRecipe.ingredients}
                    >
                    </FormControl>
                    </FormGroup>
                    </FormGroup>
                </Modal.Body>
                <Modal.Footer>
                    <Button bsStyle='success' onClick={()=> props.saveNewRecipe(props.state.latestRecipe)}>Save</Button>
                </Modal.Footer>
            </Modal>    

            <Button bsStyle='success' onClick={()=> this.open()}>Add Recipe</Button>





              updateRecipeTitle(title, currentIndex) {
    let recipes = this.state.recipes.slice();
    recipes[currentIndex] = {id: recipes[currentIndex].id, title: title, ingredients: recipes[currentIndex].ingredients}
    this.setState({recipes});
  }

  updateRecipeIngredients(ingredients, currentIndex) {
    let recipes = this.state.recipes.slice();
    recipes[currentIndex] = {id: recipes[currentIndex].id, title: recipes[currentIndex].title, ingredients: ingredients}
    this.setState({recipes});
  }

  //// REMOVING PANEL FOR NOW

     <Panel> 
                <Panel.Heading>                
                    <Panel.Title componentClass='h3' toggle>Title: {this.props.title}</Panel.Title>
                </Panel.Heading>

                    <Panel.Body collapsible>

                        <Panel.Title componentClass='h4'>Description: {this.props.description}</Panel.Title>
                        <Panel.Title componentClass='h4'>Ingredients: </Panel.Title>
                        <ol>
                            {
                                this.props.ingredients.map((item) => <li key={item}>{item}</li>)
                            }
                        </ol>
                        <Panel.Title componentClass='h4'>Ingredients And Units: </Panel.Title>
                        <ol>
                        {
                            this.props.ingredientQtyAndUnit.map((unit) => <li key={unit}>{unit}</li>)
                        }
                        </ol>
                        <Panel.Title componentClass='h4'>Recipe Steps: </Panel.Title>
                        <ol>
                        {
                            this.props.steps.map((step) => <li key={step}>{step}</li>)                     
                        }
                        </ol>
                        <ButtonToolbar>
                        <Button bsStyle='danger' onClick={() => this.props.deleteRecipe(this.props.title)}>Delete Recipe</Button>
                    </ButtonToolbar>
                    </Panel.Body>            
            </Panel>




*/