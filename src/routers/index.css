.is-active {
    font-weight: bold;
}


/* 


  <Modal show={this.state.showAdd} onHide={this.close}>
                <Modal.Header closeButton>
                <Modal.Title>Add Recipe</Modal.Title>
                </Modal.Header>
                <Modal.Body>
                    <FormGroup controlId='formBasicText'
                    validationState={getValidationState(props)}
                    >
                    <ControlLabel>Recipe Title</ControlLabel>
                    <FormControl 
                        type='text'
                        value={props.state.latestRecipe.title}
                        placeholder='Enter Recipe Name'
                        onChange = {(event) => props.updateLatestRecipe(event.target.value, props.state.latestRecipe.ingredients)}
                    >
                    </FormControl>
                    <FormGroup controlId='formControlsTextarea'>
                    <ControlLabel>Recipe Ingredients</ControlLabel>
                    
                    <FormControl 
                        type='textarea'
                        placeholder='Enter Recipe Ingredients (Separate with Commas)'
                        onChange = {(event) => props.updateLatestRecipe(props.state.latestRecipe.title, event.target.value.split(','))}
                        value={props.state.latestRecipe.ingredients}
                    >
                    </FormControl>
                    </FormGroup>
                    </FormGroup>
                </Modal.Body>
                <Modal.Footer>
                    <Button bsStyle='success' onClick={()=> props.saveNewRecipe(props.state.latestRecipe)}>Save</Button>
                </Modal.Footer>
            </Modal>    

            <Button bsStyle='success' onClick={()=> this.open()}>Add Recipe</Button>





              updateRecipeTitle(title, currentIndex) {
    let recipes = this.state.recipes.slice();
    recipes[currentIndex] = {id: recipes[currentIndex].id, title: title, ingredients: recipes[currentIndex].ingredients}
    this.setState({recipes});
  }

  updateRecipeIngredients(ingredients, currentIndex) {
    let recipes = this.state.recipes.slice();
    recipes[currentIndex] = {id: recipes[currentIndex].id, title: recipes[currentIndex].title, ingredients: ingredients}
    this.setState({recipes});
  }





*/